env:
  browser: true
  es2021: true

extends:
  - airbnb
  - plugin:react/recommended
  - plugin:functional/recommended
  - plugin:react-hooks/recommended
  - 'prettier'
  - 'plugin:prettier/recommended'
  - eslint-config-prettier

parserOptions:
  ecmaFeatures:
    jsx: true
  ecmaVersion: latest
  sourceType: module

plugins:
  - react
  - functional
  - prettier

rules:
  indent: [2, 2]
  react-hooks/exhaustive-deps: ["warn", { "additionalHooks": "(useMemo|useCallback)" }]
  import/extensions: 0
  import/no-unresolved: 0
  react/prop-types: 0
  no-console: 0
  react/react-in-jsx-scope: 0
  functional/no-conditional-statements: 0
  functional/no-expression-statements: 0
  functional/immutable-data: 0
  functional/functional-parameters: 0
  functional/no-try-statements: 0
  functional/no-throw-statements: 0
  functional/no-return-void: 0
  no-underscore-dangle: [2, { 'allow': ['__filename', '__dirname'] }]
  react/function-component-definition: [2, { 'namedComponents': 'arrow-function' }]
  testing-library/no-debug: 0
  react/jsx-filename-extension: [1, { extensions: ['.js', '.jsx'] }]
  object-curly-newline: [2, { 
    "ObjectExpression": "always", 
    "ImportDeclaration": { "minProperties": 2, "consistent": true },
    "ExportDeclaration": { "minProperties": 2, "consistent": true }
  }]
  react/jsx-wrap-multilines: [2, { declaration: true, assignment: true, return: true, arrow: true }]
  comma-dangle: [2, { arrays: 'always-multiline', objects: 'always-multiline', imports: 'always-multiline', exports: 'always-multiline', functions: 'ignore' }]
  no-trailing-spaces: 2 
  semi: [2, 'always'] 
  react/jsx-indent: [2, 2]
  react/jsx-quotes: [2, "prefer-double"]
  eol-last: [2, 'always']
  implicit-arrow-linebreak: [2, 'beside']
  arrow-body-style: [2, 'as-needed']
  prettier/prettier:
    - error
    - semi: true
      singleQuote: true
      trailingComma: all
      tabWidth: 2
      useTabs: false
      bracketSpacing: true
      printWidth: 100
      arrowParens: always
      jsxSingleQuote: false
      proseWrap: preserve
